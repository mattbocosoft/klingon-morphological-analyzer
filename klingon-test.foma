source klingon.foma

# TESTS

echo
echo ###################
echo POSITIVE TEST CASES (Success: >1 States)
echo ###################
echo
echo Plurals (from Wikipedia)
regex {tlhIngan[Klingon][N][PL_Lang]} .o. Grammar .o. {tlhInganpu’};
regex {jagh[enemy][N][PL_Lang]} .o. Grammar .o. {jaghpu’};
regex {mIn[eye][N][PL_Body]} .o. Grammar .o. {mInDu’};
regex {targh[targ][N][PL_Obj]} .o. Grammar .o. {targhmey};
echo
echo Plural Exceptions
regex {jengva’[plate][N][PL_Obj]} .o. Grammar .o. {ngop};
echo
echo Other Nouns
regex {loD[man]}"[N]""[SG]" .o. Grammar .o. {loD};
regex {be’[woman]}"[N]""[SG]" .o. Grammar .o. {be’};
regex {puq[child]}"[N]""[SG]" .o. Grammar .o. {puq};
regex {puqloD[son]}"[N]""[SG]" .o. Grammar .o. {puqloD};
regex {puqbe’[daughter]}"[N]""[SG]" .o. Grammar .o. {puqbe’};
regex {Hov}"[N]""[SG]" .o. Grammar .o. {Hov};
regex {Hov}"[N]""[PL]" .o. Grammar .o. {Hov};
regex {Hov}"[N]""[PL]" .o. Grammar .o. {Hovmey};

regex {’e’}"N" .o. Grammar .o. {that};

echo Verbs
regex {yaj[to understand]}"[PRES]""[1P]""[SG]""[NEG]" .o. Grammar .o. {jIyajbe’};

echo
echo ###################
echo NEGATIVE TEST CASES (Success: 1 State)
echo ###################

echo
echo -------------------
echo -------------------
echo
echo Re-Loading Grammar...
clear stack
regex Grammar;

echo